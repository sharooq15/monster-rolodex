{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeHolder","handleTextChange","type","onChange","App","state","searchText","a","fetch","json","data","this","setState","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAGaA,EAAO,SAAAC,GAAK,OACzB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UACTC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLPC,G,MAAW,SAAAR,GAAK,OAC7B,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACN,GAAD,OAAa,cAAC,EAAD,CAAMA,QAASA,WCFpCO,G,MAAY,SAACX,GAAW,IAEjCY,EAEEZ,EAFFY,YACAC,EACEb,EADFa,iBAEF,OAAO,uBACPZ,UAAU,aACJa,KAAK,SACPF,YAAaA,EACXG,SAAUF,MCyBHG,G,wDA7Bb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,SAAU,CACV,CAAEH,KAAM,WAAY,CAAEA,KAAM,UAAW,CAAEA,KAAM,WAEjDY,WAAY,IAND,E,4FASb,4BAAAC,EAAA,sEAC4BC,MAAM,8CADlC,8BACiFC,OADjF,OACQC,EADR,OAEEC,KAAKC,SAAS,CAACf,SAAUa,IAF3B,gD,0EAKA,WAAS,IAAD,SACyBC,KAAKN,MAA7BR,EADD,EACCA,SAAUS,EADX,EACWA,WACXO,EAAmBhB,EAASiB,QAAO,SAACtB,GAAD,OAAaA,EAAQE,KAAKqB,cAAcC,SAASV,EAAWS,kBACrG,OACE,sBAAK1B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,cACZC,iBAAkB,SAAAgB,GAAC,OAAI,EAAKL,SAAS,CAACN,WAAWW,EAAEC,OAAOC,WAE5D,cAAC,EAAD,CAAUtB,SAAUgB,W,GAzBVO,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8f68d559.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\n\nexport const Card = props => (\n<div className=\"card-container\">\n  <img alt=\"monster\"\n  src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n  <h2>{props.monster.name}</h2>\n  <p>{props.monster.email}</p>\n</div>)","import React from 'react';\nimport {Card} from '../card/card'\nimport './card-list.css'\nexport const CardList = props => \n<div className=\"card-list\">{ \n  props.monsters.map((monster) => <Card monster={monster}/>)\n}\n</div>\n","import React from 'react';\nimport './search-box.css'\n\nexport const SearchBox = (props) => {\n  const { \n    placeHolder,\n    handleTextChange, \n  } = props;\n  return <input \n  className=\"search-box\"\n        type=\"search\" \n      placeHolder={placeHolder}\n        onChange={handleTextChange}/>\n}","import React, { Component } from 'react';\nimport {\n  CardList\n} from '../src/components/card-list/card-list';\nimport{SearchBox} from '../src/components/search-box/search-box';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [\n      { name: 'sharooq'}, { name: 'naveen'}, { name: 'jefree'}\n    ],\n    searchText: '', \n  }\n  }\n  async componentDidMount() {\n    const data = await (await fetch(\"https://jsonplaceholder.typicode.com/users\")).json();\n    this.setState({monsters: data})\n  }\n\n  render(){\n    const {monsters, searchText} = this.state;\n    const filteredMonsters = monsters.filter((monster) => monster.name.toLowerCase().includes(searchText.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeHolder=\"Search Text\" \n          handleTextChange={e => this.setState({searchText:e.target.value})}\n          />\n        <CardList monsters={filteredMonsters}/> \n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}